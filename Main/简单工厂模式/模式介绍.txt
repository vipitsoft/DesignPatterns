介绍：
    当你需要什么，只需要传入一个对应的参数，就可以获取你所需要的对象，而无需知道其创建的细节。

优点：
    1、工厂类含有必要的判断逻辑，可以决定在什么时候创建哪个对象的实例。
    2、客户端无需知道所创建对象的类名，只需要知道具体类所对应的参数即可，对于一些复杂的类名，通过简单工厂模式可以减少使用者的记忆量。
    3、通过引入配置文件，可以在不修改任何客户端代码的情况下更换和增加新的类，在一定程度上提高了系统灵活性。
    
缺点：
    1、由于工厂类集中了所有产品的创建逻辑，一旦不能正常工作了，整个系统都要收到影响。
    2、使用简单工厂模式将会增加系统中类的个数，在一定程度上增加了系统的复杂度和理解难度。
    3、系统扩展困难，一旦添加新产品就不得不修改工厂逻辑，在类型较多时，有可能造成工厂逻辑过于复杂，不利于系统的扩展和维护。
    4、简单工厂模式由于使用了静态工厂方法，造成工厂角色无法形成基于继承的等级结构。
    
使用场景：
    工厂类负责创建的对象比较少：由于创建的对象较少，不会造成工厂方法中的业务逻辑过于复杂。
    客户端只知道闯入工厂类的参数，对于如何创建对象不关心：客户端既不需要关心创建细节，甚至连类名都不需要记住，只需要知道类型所对于的参数。
    